// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GameUpdate.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from GameUpdate.proto</summary>
public static partial class GameUpdateReflection {

  #region Descriptor
  /// <summary>File descriptor for GameUpdate.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static GameUpdateReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChBHYW1lVXBkYXRlLnByb3RvIhwKBFZlYzISCQoBeBgBIAEoAhIJCgF5GAIg",
          "ASgCIjEKE1ZST3JpZW50YXRpb25VcGRhdGUSGgoLb3JpZW50YXRpb24YASAB",
          "KAsyBS5WZWMyIlEKFExhYnlyaW50aFN0YXRlVXBkYXRlEiAKEWJvYXJkX29y",
          "aWVudGF0aW9uGAEgASgLMgUuVmVjMhIXCghwb3NpdGlvbhgCIAEoCzIFLlZl",
          "YzIijwEKC0dhbWVNZXNzYWdlEjUKFXZyX29yaWVudGF0aW9uX3VwZGF0ZRgB",
          "IAEoCzIULlZST3JpZW50YXRpb25VcGRhdGVIABI3ChZsYWJ5cmludGhfc3Rh",
          "dGVfdXBkYXRlGAIgASgLMhUuTGFieXJpbnRoU3RhdGVVcGRhdGVIAEIQCg5v",
          "bmVvZl9tZXNzYWdlcyJDCgpHYW1lVXBkYXRlEhkKBWV2ZW50GAEgASgOMgou",
          "R2FtZUV2ZW50EhoKBGRhdGEYAiABKAsyDC5HYW1lTWVzc2FnZSpNCglHYW1l",
          "RXZlbnQSEgoOVlJfT1JJRU5UQVRJT04QABIKCgZGSU5JU0gQARILCgdQTEFZ",
          "SU5HEAISEwoPTEFCWVJJTlRIX1NUQVRFEANiBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::GameEvent), }, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::Vec2), global::Vec2.Parser, new[]{ "X", "Y" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::VROrientationUpdate), global::VROrientationUpdate.Parser, new[]{ "Orientation" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::LabyrinthStateUpdate), global::LabyrinthStateUpdate.Parser, new[]{ "BoardOrientation", "Position" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameMessage), global::GameMessage.Parser, new[]{ "VrOrientationUpdate", "LabyrinthStateUpdate" }, new[]{ "OneofMessages" }, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameUpdate), global::GameUpdate.Parser, new[]{ "Event", "Data" }, null, null, null)
        }));
  }
  #endregion

}
#region Enums
public enum GameEvent {
  [pbr::OriginalName("VR_ORIENTATION")] VrOrientation = 0,
  [pbr::OriginalName("FINISH")] Finish = 1,
  [pbr::OriginalName("PLAYING")] Playing = 2,
  [pbr::OriginalName("LABYRINTH_STATE")] LabyrinthState = 3,
}

#endregion

#region Messages
public sealed partial class Vec2 : pb::IMessage<Vec2> {
  private static readonly pb::MessageParser<Vec2> _parser = new pb::MessageParser<Vec2>(() => new Vec2());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Vec2> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GameUpdateReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Vec2() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Vec2(Vec2 other) : this() {
    x_ = other.x_;
    y_ = other.y_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Vec2 Clone() {
    return new Vec2(this);
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 1;
  private float x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float X {
    get { return x_; }
    set {
      x_ = value;
    }
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 2;
  private float y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Y {
    get { return y_; }
    set {
      y_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Vec2);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Vec2 other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
    if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (X != 0F) {
      output.WriteRawTag(13);
      output.WriteFloat(X);
    }
    if (Y != 0F) {
      output.WriteRawTag(21);
      output.WriteFloat(Y);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (X != 0F) {
      size += 1 + 4;
    }
    if (Y != 0F) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Vec2 other) {
    if (other == null) {
      return;
    }
    if (other.X != 0F) {
      X = other.X;
    }
    if (other.Y != 0F) {
      Y = other.Y;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 13: {
          X = input.ReadFloat();
          break;
        }
        case 21: {
          Y = input.ReadFloat();
          break;
        }
      }
    }
  }

}

public sealed partial class VROrientationUpdate : pb::IMessage<VROrientationUpdate> {
  private static readonly pb::MessageParser<VROrientationUpdate> _parser = new pb::MessageParser<VROrientationUpdate>(() => new VROrientationUpdate());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<VROrientationUpdate> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GameUpdateReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public VROrientationUpdate() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public VROrientationUpdate(VROrientationUpdate other) : this() {
    orientation_ = other.orientation_ != null ? other.orientation_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public VROrientationUpdate Clone() {
    return new VROrientationUpdate(this);
  }

  /// <summary>Field number for the "orientation" field.</summary>
  public const int OrientationFieldNumber = 1;
  private global::Vec2 orientation_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Vec2 Orientation {
    get { return orientation_; }
    set {
      orientation_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as VROrientationUpdate);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(VROrientationUpdate other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Orientation, other.Orientation)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (orientation_ != null) hash ^= Orientation.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (orientation_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Orientation);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (orientation_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Orientation);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(VROrientationUpdate other) {
    if (other == null) {
      return;
    }
    if (other.orientation_ != null) {
      if (orientation_ == null) {
        orientation_ = new global::Vec2();
      }
      Orientation.MergeFrom(other.Orientation);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (orientation_ == null) {
            orientation_ = new global::Vec2();
          }
          input.ReadMessage(orientation_);
          break;
        }
      }
    }
  }

}

public sealed partial class LabyrinthStateUpdate : pb::IMessage<LabyrinthStateUpdate> {
  private static readonly pb::MessageParser<LabyrinthStateUpdate> _parser = new pb::MessageParser<LabyrinthStateUpdate>(() => new LabyrinthStateUpdate());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<LabyrinthStateUpdate> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GameUpdateReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LabyrinthStateUpdate() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LabyrinthStateUpdate(LabyrinthStateUpdate other) : this() {
    boardOrientation_ = other.boardOrientation_ != null ? other.boardOrientation_.Clone() : null;
    position_ = other.position_ != null ? other.position_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LabyrinthStateUpdate Clone() {
    return new LabyrinthStateUpdate(this);
  }

  /// <summary>Field number for the "board_orientation" field.</summary>
  public const int BoardOrientationFieldNumber = 1;
  private global::Vec2 boardOrientation_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Vec2 BoardOrientation {
    get { return boardOrientation_; }
    set {
      boardOrientation_ = value;
    }
  }

  /// <summary>Field number for the "position" field.</summary>
  public const int PositionFieldNumber = 2;
  private global::Vec2 position_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Vec2 Position {
    get { return position_; }
    set {
      position_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as LabyrinthStateUpdate);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(LabyrinthStateUpdate other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(BoardOrientation, other.BoardOrientation)) return false;
    if (!object.Equals(Position, other.Position)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (boardOrientation_ != null) hash ^= BoardOrientation.GetHashCode();
    if (position_ != null) hash ^= Position.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (boardOrientation_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(BoardOrientation);
    }
    if (position_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Position);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (boardOrientation_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(BoardOrientation);
    }
    if (position_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(LabyrinthStateUpdate other) {
    if (other == null) {
      return;
    }
    if (other.boardOrientation_ != null) {
      if (boardOrientation_ == null) {
        boardOrientation_ = new global::Vec2();
      }
      BoardOrientation.MergeFrom(other.BoardOrientation);
    }
    if (other.position_ != null) {
      if (position_ == null) {
        position_ = new global::Vec2();
      }
      Position.MergeFrom(other.Position);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (boardOrientation_ == null) {
            boardOrientation_ = new global::Vec2();
          }
          input.ReadMessage(boardOrientation_);
          break;
        }
        case 18: {
          if (position_ == null) {
            position_ = new global::Vec2();
          }
          input.ReadMessage(position_);
          break;
        }
      }
    }
  }

}

public sealed partial class GameMessage : pb::IMessage<GameMessage> {
  private static readonly pb::MessageParser<GameMessage> _parser = new pb::MessageParser<GameMessage>(() => new GameMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GameMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GameUpdateReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GameMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GameMessage(GameMessage other) : this() {
    switch (other.OneofMessagesCase) {
      case OneofMessagesOneofCase.VrOrientationUpdate:
        VrOrientationUpdate = other.VrOrientationUpdate.Clone();
        break;
      case OneofMessagesOneofCase.LabyrinthStateUpdate:
        LabyrinthStateUpdate = other.LabyrinthStateUpdate.Clone();
        break;
    }

    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GameMessage Clone() {
    return new GameMessage(this);
  }

  /// <summary>Field number for the "vr_orientation_update" field.</summary>
  public const int VrOrientationUpdateFieldNumber = 1;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::VROrientationUpdate VrOrientationUpdate {
    get { return oneofMessagesCase_ == OneofMessagesOneofCase.VrOrientationUpdate ? (global::VROrientationUpdate) oneofMessages_ : null; }
    set {
      oneofMessages_ = value;
      oneofMessagesCase_ = value == null ? OneofMessagesOneofCase.None : OneofMessagesOneofCase.VrOrientationUpdate;
    }
  }

  /// <summary>Field number for the "labyrinth_state_update" field.</summary>
  public const int LabyrinthStateUpdateFieldNumber = 2;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::LabyrinthStateUpdate LabyrinthStateUpdate {
    get { return oneofMessagesCase_ == OneofMessagesOneofCase.LabyrinthStateUpdate ? (global::LabyrinthStateUpdate) oneofMessages_ : null; }
    set {
      oneofMessages_ = value;
      oneofMessagesCase_ = value == null ? OneofMessagesOneofCase.None : OneofMessagesOneofCase.LabyrinthStateUpdate;
    }
  }

  private object oneofMessages_;
  /// <summary>Enum of possible cases for the "oneof_messages" oneof.</summary>
  public enum OneofMessagesOneofCase {
    None = 0,
    VrOrientationUpdate = 1,
    LabyrinthStateUpdate = 2,
  }
  private OneofMessagesOneofCase oneofMessagesCase_ = OneofMessagesOneofCase.None;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public OneofMessagesOneofCase OneofMessagesCase {
    get { return oneofMessagesCase_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void ClearOneofMessages() {
    oneofMessagesCase_ = OneofMessagesOneofCase.None;
    oneofMessages_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GameMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GameMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(VrOrientationUpdate, other.VrOrientationUpdate)) return false;
    if (!object.Equals(LabyrinthStateUpdate, other.LabyrinthStateUpdate)) return false;
    if (OneofMessagesCase != other.OneofMessagesCase) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (oneofMessagesCase_ == OneofMessagesOneofCase.VrOrientationUpdate) hash ^= VrOrientationUpdate.GetHashCode();
    if (oneofMessagesCase_ == OneofMessagesOneofCase.LabyrinthStateUpdate) hash ^= LabyrinthStateUpdate.GetHashCode();
    hash ^= (int) oneofMessagesCase_;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (oneofMessagesCase_ == OneofMessagesOneofCase.VrOrientationUpdate) {
      output.WriteRawTag(10);
      output.WriteMessage(VrOrientationUpdate);
    }
    if (oneofMessagesCase_ == OneofMessagesOneofCase.LabyrinthStateUpdate) {
      output.WriteRawTag(18);
      output.WriteMessage(LabyrinthStateUpdate);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (oneofMessagesCase_ == OneofMessagesOneofCase.VrOrientationUpdate) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(VrOrientationUpdate);
    }
    if (oneofMessagesCase_ == OneofMessagesOneofCase.LabyrinthStateUpdate) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(LabyrinthStateUpdate);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GameMessage other) {
    if (other == null) {
      return;
    }
    switch (other.OneofMessagesCase) {
      case OneofMessagesOneofCase.VrOrientationUpdate:
        if (VrOrientationUpdate == null) {
          VrOrientationUpdate = new global::VROrientationUpdate();
        }
        VrOrientationUpdate.MergeFrom(other.VrOrientationUpdate);
        break;
      case OneofMessagesOneofCase.LabyrinthStateUpdate:
        if (LabyrinthStateUpdate == null) {
          LabyrinthStateUpdate = new global::LabyrinthStateUpdate();
        }
        LabyrinthStateUpdate.MergeFrom(other.LabyrinthStateUpdate);
        break;
    }

    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          global::VROrientationUpdate subBuilder = new global::VROrientationUpdate();
          if (oneofMessagesCase_ == OneofMessagesOneofCase.VrOrientationUpdate) {
            subBuilder.MergeFrom(VrOrientationUpdate);
          }
          input.ReadMessage(subBuilder);
          VrOrientationUpdate = subBuilder;
          break;
        }
        case 18: {
          global::LabyrinthStateUpdate subBuilder = new global::LabyrinthStateUpdate();
          if (oneofMessagesCase_ == OneofMessagesOneofCase.LabyrinthStateUpdate) {
            subBuilder.MergeFrom(LabyrinthStateUpdate);
          }
          input.ReadMessage(subBuilder);
          LabyrinthStateUpdate = subBuilder;
          break;
        }
      }
    }
  }

}

public sealed partial class GameUpdate : pb::IMessage<GameUpdate> {
  private static readonly pb::MessageParser<GameUpdate> _parser = new pb::MessageParser<GameUpdate>(() => new GameUpdate());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GameUpdate> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GameUpdateReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GameUpdate() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GameUpdate(GameUpdate other) : this() {
    event_ = other.event_;
    data_ = other.data_ != null ? other.data_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GameUpdate Clone() {
    return new GameUpdate(this);
  }

  /// <summary>Field number for the "event" field.</summary>
  public const int EventFieldNumber = 1;
  private global::GameEvent event_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GameEvent Event {
    get { return event_; }
    set {
      event_ = value;
    }
  }

  /// <summary>Field number for the "data" field.</summary>
  public const int DataFieldNumber = 2;
  private global::GameMessage data_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GameMessage Data {
    get { return data_; }
    set {
      data_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GameUpdate);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GameUpdate other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Event != other.Event) return false;
    if (!object.Equals(Data, other.Data)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Event != 0) hash ^= Event.GetHashCode();
    if (data_ != null) hash ^= Data.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Event != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Event);
    }
    if (data_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Data);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Event != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Event);
    }
    if (data_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GameUpdate other) {
    if (other == null) {
      return;
    }
    if (other.Event != 0) {
      Event = other.Event;
    }
    if (other.data_ != null) {
      if (data_ == null) {
        data_ = new global::GameMessage();
      }
      Data.MergeFrom(other.Data);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          event_ = (global::GameEvent) input.ReadEnum();
          break;
        }
        case 18: {
          if (data_ == null) {
            data_ = new global::GameMessage();
          }
          input.ReadMessage(data_);
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
